(* ************************************************************** *)
(*                                                                *)
(*                      ChPTEM2                                   *)
(*                                                                *)
(* ************************************************************** *)

(*
Author:              F.Orellana

Year:                2001

Mathematica Version: 4.0

Requirements:        FeynCalc > 3, PHI

Summary:             Configuration file for the family of
						lagrangians ChPTEM2 for PHI

Description:         Definitions for standard ChPT lagrangians.

						The definitions follow
						Ulf-G. Meissner, G. Mueller, S. Steininger
						(1997), hep-ph/9704377
*)

(* ************************************************************** *)

(* Modified box definitions for FeynCalc *)

<<"FCBoxes.m"

(* ************************************************************** *)

(* Usage definitions *)

Phi`Objects`ChPTEM2::usage=
"Lagrangian[ChPTEM2[2] is the pionic Chiral
Perturbation Theory lagrangian with couplings to virtual photons
written in terms of a matrix
representation of the meson fields to second order in the energy
and the electron charge.";

(* ************************************************************** *)

(* Source fields *)

(* The scalar source is set to the quark mass matrix *)

QuantumField[Particle[Scalar[0],st___RenormalizationState,
sc___RenormalizationScheme,qs___ExpansionState,
opts___Rule|opts___List],SUNIndex[0]][x_]:=
UQuarkMassMatrix[st,sc,qs,opts];

(* To simplify algebra, the iso-vector components
of the vector and axial-vector sources should be set to zero.
Below we identify the iso-spin zero or iso-scalar component of the
vector field with the photon field of the covariant derivative
below *)

QuantumField[a___,Particle[Vector[1],b___],c___,SUNIndex[0]][x_]:=
QuantumField[a,Particle[Vector[1],b],c][x];

(* ************************************************************** *)

(* Adjoints and conjugates *)

Adjoint[p:QuantumField[___,Particle[
(Vector|AxialVector|Scalar|PseudoScalar)[0|1|2],___],___][_]] = p;

Adjoint[p:QuantumField[___,Particle[
(Vector|AxialVector|Scalar|PseudoScalar)[0|1|2],___],___]] = p;

Unprotect[Conjugate];

Conjugate[p:QuantumField[___,Particle[
(Vector|AxialVector|Scalar|PseudoScalar)[0|1|2],___],___][_]] = p;

Conjugate[p:QuantumField[___,Particle[
(Vector|AxialVector|Scalar|PseudoScalar)[0|1|2],___],___]] = p;

Protect[Conjugate];

(* ************************************************************** *)

(* Antiparticles *)

ChargeConjugate[Pion] = Pion;
ChargeConjugate[Vector[0]] = Vector[0];
ChargeConjugate[AxialVector[0]] = AxialVector[0];
ChargeConjugate[Scalar[0]] = Scalar[0];
ChargeConjugate[Scalar[1]] = Scalar[1];
ChargeConjugate[PseudoScalar[0]] = PseudoScalar[0];
ChargeConjugate[PseudoScalar[1]] = PseudoScalar[1];
ChargeConjugate[PionPlus] = PionMinus;
ChargeConjugate[PionMinus] = PionPlus;
ChargeConjugate[PionZero] = PionZero;
ChargeConjugate[KaonMinus] = KaonPlus;
ChargeConjugate[KaonPlus] = KaonMinus;
ChargeConjugate[KaonZero] = KaonZeroBar;
ChargeConjugate[KaonZeroBar] = KaonZero;
ChargeConjugate[EtaMeson] = EtaMeson;

(* ************************************************************** *)

(* Constants *)

(* When calculating infrared divergences, the photon mass
should not be set to zero *)

(*ParticleMass[Photon,___]:=0;
ParticleMass[Photon[0],___]:=0;*)

(*CouplingConstant[ChPTPhoton2[4],1,___][___]=0;
CouplingConstant[ChPTPhoton2[4],2,___][___]=0;
CouplingConstant[ChPTPhoton2[4],3,___][___]=0;
CouplingConstant[ChPTPhoton2[4],4,___][___]=0;
CouplingConstant[ChPTPhoton2[4],5,___][___]=0;
CouplingConstant[ChPTPhoton2[4],6,___][___]=0;
CouplingConstant[ChPTPhoton2[4],7,___][___]=0;
CouplingConstant[ChPTPhoton2[4],8,___][___]=0;
CouplingConstant[ChPTPhoton2[4],9,___][___]=0;
CouplingConstant[ChPTPhoton2[4],10,___][___]=0;
CouplingConstant[ChPTPhoton2[4],11,___][___]=0;
CouplingConstant[ChPTPhoton2[4],12,___][___]=0;*)

(* ************************************************************** *)

(* The covariant derivative *)

CovariantFieldDerivative[aa_,x_,{loris__},rest___] :=
CovariantFieldDerivative[aa,x,##,rest]&@@
LorentzIndex/@{loris};

(* -------------------------------------------------------------- *)

(* EM-ChPT - Meissner, Mueller, Steininger *)

CovariantFieldDerivative[aa_,x_,lori_LorentzIndex,
ar___RenormalizationState,br___RenormalizationScheme,
cr___ExpansionState,(opts___Rule|opts___List)] /;
(Explicit /. Flatten[{opts}] /. Options[CovariantFieldDerivative]) :=

FieldDerivative[aa,x,lori] +

I*NM[UGeneratorMatrixIsoDot[QuantumField[Particle[
LeftComponent[0],ar,br],lori][x],opts],aa] -

I*NM[aa,UGeneratorMatrixIsoDot[QuantumField[Particle[
RightComponent[0],ar,br],lori][x],opts]]-

I*
NM[UQuarkChargeMatrix[ar,br,cr,opts],
QuantumField[Particle[Photon,ar,br],lori][x],aa]+

I*
NM[aa,UQuarkChargeMatrix[ar,br,cr,opts],
QuantumField[Particle[Photon,ar,br],lori][x]];

(* ************************************************************** *)
(* Modify the photon propagator to general Lorentz gange *)

Phi`Couplings`GenProps[a:Vector1] :=
{FeynArts`AnalyticalPropagator[
FeynArts`External][s a[i, mom, {li2}]] ==
PolarizationVector[a[i], mom, li2],
FeynArts`AnalyticalPropagator[
FeynArts`Internal][s a[i, mom, {li1} -> {li2}]] ==
I*PropagatorDenominator[mom, FeynArts`Mass[a[i]]]*
(-MetricTensor[li1, li2] +
(1 - 1/$Gauge)*
FourVector[mom, li1]*FourVector[mom, li2]*
1/(PropagatorDenominator1[mom, FeynArts`Mass[a[i]]])
)};

(* ************************************************************** *)

(* Re-setting of options and $-variables *)

$IsoSpinProjectionRules =
	{PionPlus -> (Iso[Pion, {1}] - I*Iso[Pion, {2}])/Sqrt[2],
	PionMinus -> (Iso[Pion, {1}] + I*Iso[Pion, {2}])/Sqrt[2],
	PionZero -> Iso[Pion, {3}]};

$ExpansionQuantities=Union[$ExpansionQuantities,{MetricTensor[__],Pair[__]}];

$ParticlesInUse={Pion,PionPlus,PionMinus,PionZero,Photon,AxialVector[0](*,Vector[0]*)};

$PropagatorMassesStates={Pion[0]->{RenormalizationState[0]},
	Kaon[0]->{RenormalizationState[0]},
	AxialVector[0][0]->{RenormalizationState[0]},
	Vector[0][0]->{RenormalizationState[0]},
	Photon[0]->{RenormalizationState[0]}};

$CouplingIsoIndicesSpecifications =
{Pion[0]->{{IsoRange->{1,2,3},IsoIndicesString->"I"}},
	Kaon[0]->{{IsoRange->{1,2},IsoIndicesString->"J"}},
	AxialVector[0][0]->{{IsoRange->{1,2,3},IsoIndicesString->"I"}},
Vector[0][0]->{{IsoRange->{1,2,3},IsoIndicesString->"I"}}};

$MixingFields=
{};

$InsertOnly=
{(*Vector[0][0]->{
FeynArts`Incoming,
FeynArts`Outgoing,
FeynArts`External},
	AxialVector[0][0]->{
FeynArts`Incoming,
FeynArts`Outgoing,
FeynArts`External},
Photon[0]->{
FeynArts`Incoming,
FeynArts`Outgoing,
FeynArts`External}*)};

(* ************************************************************** *)
